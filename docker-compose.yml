version: '3'
services:
  # postgres database
  db:
    image: postgres
    restart: always
    environment: 
      - POSTGRES_PASSWORD=mysecretpassword
    ports:
      - 5432:5432

  # kafka zookeeper
  zookeeper:
    restart: always
    image: strimzi/kafka:0.16.2-kafka-2.4.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  # kafka broker
  kafka:
    restart: always
    image: strimzi/kafka:0.16.2-kafka-2.4.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override num.partitions=$${KAFKA_NUM_PARTITIONS} --override group.min.session.timeout.ms=250"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_NUM_PARTITIONS: 3

  # quarkus application
  app:
    restart: always
    build:
      context: ./
      dockerfile: ./src/main/docker/Dockerfile.jvm
    ports:
      - 8080:8080
    # wait for database and kafka to be started before start the application
    #command: ["./wait-for-it.sh", "db:5432", "kafka:9092", "--", "./application", "-Dquarkus.http.host=0.0.0.0"]
    command: ["/deployments/wait-for-it.sh", "db:5432", "kafka:9092", "--", "/deployments/run-java.sh"]

